<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Convert" xml:space="preserve">
    <value>Конвертация</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Копировать</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Дата</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Экспортировать</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>Файл</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>С:</value>
  </data>
  <data name="OpenFile" xml:space="preserve">
    <value>Открыть</value>
  </data>
  <data name="OpenWizardTitle" xml:space="preserve">
    <value>Помощник конвертации</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Поиск</value>
  </data>
  <data name="SelectDate" xml:space="preserve">
    <value>Диапазон</value>
  </data>
  <data name="Supported" xml:space="preserve">
    <value>Поддерживаемы</value>
  </data>
  <data name="Till" xml:space="preserve">
    <value>По:</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Запрос</value>
  </data>
  <data name="SavedTitle" xml:space="preserve">
    <value>Сохранено!</value>
    <comment>Сохранено!</comment>
  </data>
  <data name="ErrorOpenHistory" xml:space="preserve">
    <value>Ошибка при открытии истории: {0}</value>
    <comment>Ошибка при открытии истории: {0}</comment>
  </data>
  <data name="ErrorTitle" xml:space="preserve">
    <value>Ошибка!</value>
    <comment>Ошибка!</comment>
  </data>
  <data name="WizardError" xml:space="preserve">
    <value>Ошибка мастера конвертации: {0}</value>
    <comment>Ошибка мастера конвертации: {0}</comment>
  </data>
  <data name="ErrorUrlOpen" xml:space="preserve">
    <value>Не удалось открыть url: {0}</value>
    <comment>Не удалось открыть url: {0}</comment>
  </data>
  <data name="ConvertWizardOpenConverted" xml:space="preserve">
    <value>Открыть сконвертированную историю?</value>
    <comment>Открыть сконвертированную историю?</comment>
  </data>
  <data name="QuestionTitle" xml:space="preserve">
    <value>Вопрос</value>
    <comment>Вопрос</comment>
  </data>
  <data name="SuccessfullyConvertedQuestion" xml:space="preserve">
    <value>Успешно сконвертировано {0} историй. Сохранить?</value>
    <comment>Успешно сконвертировано {0} историй. Сохранить?</comment>
  </data>
  <data name="OperationComplete" xml:space="preserve">
    <value>Выполнено</value>
    <comment>Выполнено</comment>
  </data>
  <data name="ErrorOccured" xml:space="preserve">
    <value>Произошла ошибка!</value>
    <comment>Произошла ошибка!</comment>
  </data>
  <data name="ErrorOccuredWithParams" xml:space="preserve">
    <value>Произошла ошибка! {0}</value>
    <comment>Произошла ошибка! {0}</comment>
  </data>
  <data name="InvalidPath" xml:space="preserve">
    <value>Путь не выбран!</value>
    <comment>Путь не выбран!</comment>
  </data>
  <data name="BrowserNotSelected" xml:space="preserve">
    <value>Не выбран браузер!</value>
    <comment>Не выбран браузер!</comment>
  </data>
  <data name="AllFilesMask" xml:space="preserve">
    <value>(Все файлы) | *.*</value>
    <comment>(Все файлы) | *.*</comment>
  </data>
  <data name="ViewSelectBrowser" xml:space="preserve">
    <value>Выберите браузер</value>
    <comment>Браузер</comment>
  </data>
  <data name="ViewPathToHistory" xml:space="preserve">
    <value>Путь до истории</value>
    <comment>Путь до истории</comment>
  </data>
  <data name="SupportedFiles" xml:space="preserve">
    <value>Поддерживаемые файлы |</value>
    <comment>Поддерживаемые файлы |</comment>
  </data>
  <data name="ViewConvert" xml:space="preserve">
    <value>Конвертировать</value>
    <comment>Конвертировать</comment>
  </data>
  <data name="ViewCurrentCountOfHistory" xml:space="preserve">
    <value>Текущее количество историй: </value>
    <comment>Текущее количество историй: </comment>
  </data>
</root>